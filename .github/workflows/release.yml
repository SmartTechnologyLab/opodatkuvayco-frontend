name: Release

on:
  workflow_dispatch:

permissions:
  contents: read # for checkout

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.18.3"

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci

#  lint:
#    needs: [setup]
#    name: Lint
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v4
#
#      - name: Setup Node.js
#        uses: actions/setup-node@v4
#        with:
#          node-version: "20.18.3"
#
#      - name: Cache dependencies
#        uses: actions/cache@v4
#        with:
#          path: ~/.npm
#          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
#          restore-keys: |
#            ${{ runner.os }}-node-
#
#      - name: Install dependencies
#        run: npm ci
#
#      - name: Linter
#        run: npx lint-staged
#
#  type:
#    needs: [setup]
#    name: Type check
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v4
#
#      - name: Setup Node.js
#        uses: actions/setup-node@v4
#        with:
#          node-version: "20.18.3"
#
#      - name: Cache dependencies
#        uses: actions/cache@v4
#        with:
#          path: ~/.npm
#          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
#          restore-keys: |
#            ${{ runner.os }}-node-
#
#      - name: Install dependencies
#        run: npm ci
#
#      - name: Type check
#        run: npm run type-check
#
#  tests:
#    needs: [lint, type]
#    name: Unit tests
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v4
#
#      - name: Setup Node.js
#        uses: actions/setup-node@v4
#        with:
#          node-version: "20.18.3"
#
#      - name: Cache dependencies
#        uses: actions/cache@v4
#        with:
#          path: ~/.npm
#          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
#          restore-keys: |
#            ${{ runner.os }}-node-
#
#      - name: Install dependencies
#        run: npm ci
#
#      - name: Unit tests
#        run: npm run test

  build:
#    needs: [tests]
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.18.3"

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact
          path: ./dist



  release:
    needs: [build]
    name: Release
    permissions:
      contents: write # to be able to publish a GitHub release
      issues: write # to be able to comment on released issues
      pull-requests: write # to be able to comment on released pull requests
      id-token: write # to enable use of OIDC for npm provenance
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false  # Отключаем сохранение стандартного GITHUB_TOKEN

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci

      - name: Run Release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        run: npm run release


  deploy:
    needs: [release]
    name: Deploy
    runs-on: ubuntu-latest
    environment:
      name: production
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifact
          path: ./dist

      - name: Deploy project
        uses: burnett01/rsync-deployments@5.2.1
        with:
          switches: -avzr --delete
          path: ./dist
          remote_host: ${{ secrets.DEV_REMOTE_HOST }}
          remote_user: ${{ secrets.DEV_REMOTE_USER }}
          remote_key: ${{ secrets.DEV_REMOTE_KEY }}
          remote_path: ${{ secrets.PROD_REMOTE_PATH }}