name: Release

on:
  push:
    branches:
      - main

permissions:
  contents: read

x-checkout: &checkout
  name: Checkout
  uses: actions/checkout@v4

x-cache: &cache
  name: Cache dependencies
  uses: actions/cache@v4
  with:
    path: ~/.npm
    key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
    restore-keys: |
      ${{ runner.os }}-node-

x-install: &install
  name: Install dependencies
  run: npm ci

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - <<: *checkout
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.13.1"
      - <<: *cache
      - <<: *install

  lint:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - <<: *checkout
      - <<: *cache
      - <<: *install
      - name: Linter
        run: npx lint-staged

  type_check:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - <<: *checkout
      - <<: *cache
      - <<: *install
      - name: Type check
        run: npm run type-check

  unit_tests:
    needs: [lint, type_check]
    runs-on: ubuntu-latest
    steps:
      - <<: *checkout
      - <<: *cache
      - <<: *install
      - name: Unit tests
        run: npm run test

  build:
    needs: [unit_tests]
    runs-on: ubuntu-latest
    steps:
      - <<: *checkout
      - <<: *cache
      - <<: *install
      - name: Build project
        run: npm run build
      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: build-artifact
          path: ./dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: production
    steps:
      - <<: *checkout
      - name: Download build artifact
        uses: actions/download-artifact@v3
        with:
          name: build-artifact
          path: ./dist
      - name: rsync deploy project
        uses: burnett01/rsync-deployments@5.2.1
        with:
          switches: -avzr --delete
          path: ./dist
          remote_host: ${{ secrets.DEV_REMOTE_HOST }}
          remote_user: ${{ secrets.DEV_REMOTE_USER }}
          remote_key: ${{ secrets.DEV_REMOTE_KEY }}
          remote_path: ${{ secrets.PROD_REMOTE_PATH }}

  release:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - <<: *checkout
      - <<: *cache
      - <<: *install
      - name: Run Release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        run: npm run release
